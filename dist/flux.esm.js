function l(o){let[t,n,r,i="",e=""]=o,s=`${t} ${i}`.trim(),c=`${t} ${e}`.trim();return{"x-transition:enter":s,"x-transition:enter-start":n,"x-transition:enter-end":r,"x-transition:leave":c,"x-transition:leave-start":r,"x-transition:leave-end":n}}function x(o){let t={};for(let n in o){let r=o[n];t[`x-transition:${n}`]=r}return t}function p(o,t=null){if(!t)throw new Error("x-flux: Template "+o+" does not exist in the config.");try{return Array.isArray(t)?l(t):x(t)}catch{throw new Error("x-flux: Only accept array or object.")}}function a(o,t,n){let r=p(t,n);if(!r)throw new Error("x-flux: No transitions found for "+t);for(let i of Object.keys(r))o.setAttribute(i,r[i]);o.removeAttribute("x-flux")}function u(o,t,n,r=null){o.magic(t,i=>()=>{a(i,n,r)})}function f(o){let t=o.split("-");if(t.length===1)return o;let n=t.slice(1).map(r=>r.charAt(0).toUpperCase()+r.slice(1));return t[0]+n.join("")}function d(o,t){o.directive("flux",(n,{expression:r},{evaluate:i})=>{let e=i(r),s=(Array.isArray(e)?e:t[e])||null;a(n,e,s)}).before("transition");for(let n of Object.keys(t)){let r=f(n),i=t[n]||null;u(o,r,n,i)}o.magic("flux",n=>(r="",i=null,e=!0)=>{if(i){let c=f(r);t[r]=i,u(o,c,r,i)}if(!e)return;let s=t[r]||null;a(n,r,s)})}var M=d;export{M as default};
