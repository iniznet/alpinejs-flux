function a({templateName:n,transitions:t}){if(!t)throw new Error("x-flux: No transitions found for "+n);for(let r of Object.keys(t))el.setAttribute(r,t[r]);el.removeAttribute("x-flux")}function f(n){let[t,r,e,i="",o=""]=n,s=`${t} ${i}`.trim(),l=`${t} ${o}`.trim();return{"x-transition:enter":s,"x-transition:enter-start":r,"x-transition:enter-end":e,"x-transition:leave":l,"x-transition:leave-start":e,"x-transition:leave-end":r}}function u(n){let t={};for(let r in n){let e=n[r];t[`x-transition:${r}`]=e}return t}function c(n,t=null){if(!t)throw new Error("x-flux: Template "+n+" does not exist in the config.");try{return Array.isArray(t)?f(t):u(t)}catch{throw new Error("x-flux: Only accept array or object.")}}function x(n){let t=n.split("-");if(t.length===1)return n;let r=t.slice(1).map(e=>e.charAt(0).toUpperCase()+e.slice(1));return t[0]+r.join("")}function m(n,t){n.directive("flux",(r,{expression:e},{evaluate:i})=>{let o=i(e),s=(Array.isArray(o)?o:t[o])||null;console.log(r,o,s);let l=c(o,s);a(o,l)}).before("transition"),n.magic("flux",r=>e=>{let i=t[e]||null,o=c(e,i);a(e,o)});for(let r of Object.keys(t)){let e=x(r);n.magic(e,i=>()=>{let o=t[r]||null,s=c(r,o);a(r,s)})}}var T=m;export{T as default};
