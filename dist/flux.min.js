(()=>{function a(e,t,r){if(!r)throw new Error("x-flux: No transitions found for "+t);for(let n of Object.keys(r))e.setAttribute(n,r[n]);e.removeAttribute("x-flux")}function f(e){let[t,r,n,i="",o=""]=e,s=`${t} ${i}`.trim(),u=`${t} ${o}`.trim();return{"x-transition:enter":s,"x-transition:enter-start":r,"x-transition:enter-end":n,"x-transition:leave":u,"x-transition:leave-start":n,"x-transition:leave-end":r}}function l(e){let t={};for(let r in e){let n=e[r];t[`x-transition:${r}`]=n}return t}function c(e,t=null){if(!t)throw new Error("x-flux: Template "+e+" does not exist in the config.");try{return Array.isArray(t)?f(t):l(t)}catch{throw new Error("x-flux: Only accept array or object.")}}function x(e){let t=e.split("-");if(t.length===1)return e;let r=t.slice(1).map(n=>n.charAt(0).toUpperCase()+n.slice(1));return t[0]+r.join("")}function p(e,t){e.directive("flux",(r,{expression:n},{evaluate:i})=>{let o=i(n),s=(Array.isArray(o)?o:t[o])||null,u=c(o,s);a(r,o,u)}).before("transition");for(let r of Object.keys(t)){let n=x(r);e.magic(n,i=>()=>{let o=t[r]||null,s=c(r,o);a(i,r,s)})}e.magic("flux",r=>(n="")=>{let i=t[n]||null,o=c(n,i);a(r,n,o)})}document.addEventListener("alpine:init",()=>window.Alpine.plugin(p));})();
